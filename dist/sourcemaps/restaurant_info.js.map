{"version":3,"sources":["restaurant_info.js","addReviewModal.js"],"names":["restaurant","reviews","outboxReviews","newMap","matchesMediaQuery","mediaQuery","create","document","previouslyConnected","event","navigator","onLine","window","matchMedia","matches","updateRestaurantContainerAria","caches","setInterval","serviceWorker","_event$data","data","registerServiceWorker","review","error","enqueueToast","requestAnimationFrame","updateReviewHTML","bind","Ã¸","requestId","addEventListener","showConnectionStatus","console","fillBreadcrumb","fillRestaurantHTML","initMap","DBHelper","mapMarkerForRestaurant","self","id","latlng","lng","fetchReviews","L","tileLayer","mapboxToken","maxZoom","attribution","addTo","MAPBOX_API_KEY","nextMatchesMediaQuery","previouslyFocusedElement","accessibleRestaurantContainer","getElementById","setAttribute","restaurantContainer","showErrorLoadingRestaurant","classList","add","callback","arguments","length","undefined","name","address","picture","sourceLarge","media","imageUrlForRestaurant","size","wide","appendChild","sourceMedium","createElement","srcset","type","sourceSmall","image","innerHTML","alt","concat","cuisine_type","addReviewButton","removeAttribute","operating_hours","fillRestaurantHoursHTML","call","fillMarkAsFavouriteHTML","operatingHours","addReviewOverlayHeading","hasOwnProperty","key","row","day","time","Object","hours","markRestaurantAsFavourite","button","icon","querySelector","remove","unmarkRestaurantAsFavourite","isFavourite","is_favorite","text","stringToBoolean","favouriteButton","fillReviewsHTML","getOutboxReviews","fetchReviewsByRestaurantId","noReviews","forEach","ul","insertBefore","createReviewHTML","firstChild","fillSendingReviewsHTML","request_id","outboxReview","sending","article","headerSpan","container","className","loadingText","date","updatedAt","dateText","contentSpan","rating","comments","formatDate","reviewElement","errorText","Date","breadcrumb","li","getUrlParam","url","location","href","results","RegExp","exec","decodeURIComponent","spinner","removeMarkAsFavouriteFetchingState","failedUpdateCallback","successMessage","errorMessage","restaurantId","newIsFavourite","setMarkAsFavouriteFetchingState","setRestaurantFavouriteStatus","updatedRestaurant","toggleRestaurantAsFavourite","openModal","activeElement","overlay","interactiveElements","querySelectorAll","body","trapTabKey","setTimeout","focus","closeModal","clearFormErrors","removeEventListener","firstElement","lastElement","shiftKey","target","preventDefault","setNameInputError","nameInput","nameInputError","clearNameInputError","setRatingInputError","ratingInput","ratingInputError","clearRatingInputError","setCommentInputError","commentInput","commentInputError","clearCommentInputError","errorFunctions","setError","clearError","validateInput","value","inputValue","input","cloneNode","Number","parseInt","validateAllInputs","invalidInputs","push","handleRangeChange","handleInputKeyUp","handleInputBlur","getFormInputValues","values","clearForm","handleAddReviewSubmit","_validateAllInputs","formError","join","_getFormInputValues","controller","now","newReview","restaurant_id","postMessage","submitButton","addReview","log","handleFormSubmit"],"mappings":"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","file":"../js/restaurant_info.js","sourcesContent":["let restaurant;\nlet reviews;\nlet outboxReviews;\nlet newMap;\nlet matchesMediaQuery = true;\nconst mediaQuery = '(min-width: 800px)';\nlet previouslyConnected;\nconst Ã¸ = Object.create(null);\n\n/**\n * Initialize map as soon as the page is loaded.\n */\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  previouslyConnected = navigator.onLine;\n  if (window.matchMedia) {\n    matchesMediaQuery = window.matchMedia(mediaQuery).matches;\n  }\n  updateRestaurantContainerAria(); // set initial aria values\n  registerServiceWorker();\n\n  if (window.caches) {\n    setInterval(cleanMapboxTilesCache, 5000);\n  }\n\n  if (navigator.serviceWorker) {\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      const {\n        type, requestId, review, error,\n      } = event.data;\n      if (type === 'update-review') {\n        if (error) {\n          enqueueToast('An error occurred while submitting your review', 'error');\n          requestAnimationFrame(updateReviewHTML.bind(Ã¸, true, requestId));\n        } else {\n          enqueueToast(`${review.name}'s review has been saved`, 'success');\n          requestAnimationFrame(updateReviewHTML.bind(Ã¸, false, requestId, review));\n        }\n      }\n    });\n  }\n\n  if ('onLine' in navigator) {\n    window.addEventListener('online', showConnectionStatus);\n    window.addEventListener('offline', showConnectionStatus);\n    requestAnimationFrame(showConnectionStatus);\n  }\n\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      requestAnimationFrame(fillBreadcrumb.bind(Ã¸, restaurant));\n      requestAnimationFrame(fillRestaurantHTML.bind(Ã¸, restaurant));\n      requestAnimationFrame(initMap);\n      requestAnimationFrame(DBHelper.mapMarkerForRestaurant.bind(Ã¸, self.restaurant, self.newMap));\n      fetchReviews(restaurant.id);\n    }\n  });\n});\n\n/**\n * Initialize leaflet map\n */\nconst initMap = () => {\n  const MAPBOX_API_KEY = 'pk.eyJ1IjoiYW5lZXNhLXNhbGVoIiwiYSI6ImNqa2xmZHVwMDFoYW4zdnAwYWplMm53bHEifQ.V11dDOtEnWSwTxY-C8mJLw';\n  self.newMap = L.map('map', {\n    center: [restaurant.latlng.lat, restaurant.latlng.lng],\n    zoom: 16,\n    scrollWheelZoom: false,\n  });\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n    mapboxToken: MAPBOX_API_KEY,\n    maxZoom: 18,\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, '\n        + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, '\n        + 'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.streets',\n  }).addTo(newMap);\n};\n\n/**\n* Update aria-hidden values of the visible and accessible restaurant containers\n*/\nwindow.addEventListener('resize', () => {\n  if (window.matchMedia) {\n    const nextMatchesMediaQuery = window.matchMedia(mediaQuery).matches;\n    if (nextMatchesMediaQuery !== matchesMediaQuery) { // only update aria when layout changes\n      matchesMediaQuery = nextMatchesMediaQuery;\n      updateRestaurantContainerAria();\n    }\n  }\n});\n\n/**\n* Set aria-hidden values for visible and regular restaurant containers\n* Accessible restaurant container is off screen\n* It is required to maintain screen reading order when the layout shifts\n*/\nconst updateRestaurantContainerAria = () => {\n  const restaurantContainer = document.getElementById('restaurant-container');\n  const accessibleRestaurantContainer = document.getElementById('accessible-restaurant-container');\n  if (matchesMediaQuery) { // larger layout, screen reading order off\n    restaurantContainer.setAttribute('aria-hidden', 'true');\n    accessibleRestaurantContainer.setAttribute('aria-hidden', 'false');\n  } else { // use regular reading order\n    restaurantContainer.setAttribute('aria-hidden', 'false');\n    accessibleRestaurantContainer.setAttribute('aria-hidden', 'true');\n  }\n};\n\nconst showErrorLoadingRestaurant = () => {\n  document.getElementById('main-error').classList.add('show');\n  document.getElementById('wrap-main-content').classList.add('hide');\n};\n\n/**\n * Get current restaurant from page URL.\n */\nconst fetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  const id = getUrlParam('id');\n  if (!id) { // no id found in URL\n    const error = 'No restaurant id in URL';\n    callback(error, null);\n    requestAnimationFrame(showErrorLoadingRestaurant);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        requestAnimationFrame(showErrorLoadingRestaurant);\n        return;\n      }\n      callback(null, restaurant);\n    });\n  }\n};\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nconst fillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML += restaurant.address;\n\n  const picture = document.getElementById('restaurant-picture');\n\n  const sourceLarge = document.createElement('source');\n  sourceLarge.media = '(min-width: 800px)';\n  sourceLarge.srcset = DBHelper.imageUrlForRestaurant(restaurant, { size: 'large', wide: true });\n  sourceLarge.type = 'image/jpeg';\n  picture.appendChild(sourceLarge);\n\n  const sourceMedium = document.createElement('source');\n  sourceMedium.media = '(min-width: 600px)';\n  sourceMedium.srcset = DBHelper.imageUrlForRestaurant(restaurant, { size: 'medium' });\n  sourceMedium.type = 'image/jpeg';\n  picture.appendChild(sourceMedium);\n\n  const sourceSmall = document.createElement('source');\n  sourceSmall.srcset = DBHelper.imageUrlForRestaurant(restaurant, { size: 'small' });\n  sourceSmall.type = 'image/jpeg';\n  picture.appendChild(sourceSmall);\n\n  const image = document.createElement('img');\n  image.className = 'restaurant-img';\n  // set default size in case picture element is not supported\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\n  image.alt = restaurant.alt;\n  picture.appendChild(image);\n\n  const accessibleRestaurantImage = document.getElementById('accessible-restaurant-img');\n  accessibleRestaurantImage.setAttribute('aria-label', restaurant.alt);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = `Cuisine: ${restaurant.cuisine_type}`;\n\n  const accessibleRestaurantCuisine = document.getElementById('accessible-restaurant-cuisine');\n  accessibleRestaurantCuisine.innerHTML = `Cuisine: ${restaurant.cuisine_type}`;\n\n  const addReviewButton = document.getElementById('add-review-button');\n  addReviewButton.setAttribute('aria-label', `Add a review for ${restaurant.name}`);\n  addReviewButton.removeAttribute('disabled');\n\n  const addReviewOverlayHeading = document.getElementById('add-review-overlay-heading');\n  addReviewOverlayHeading.innerHTML = `Add review for ${restaurant.name}`;\n\n  // enable buttons\n  document.getElementById('mark-as-favourite').removeAttribute('disabled');\n  document.getElementById('add-review-button').removeAttribute('disabled');\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n\n  if (Object.hasOwnProperty.call(restaurant, 'is_favorite')) {\n    fillMarkAsFavouriteHTML();\n  }\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nconst fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (const key in operatingHours) {\n    if (Object.prototype.hasOwnProperty.call(operatingHours, key)) {\n      const row = document.createElement('tr');\n\n      const day = document.createElement('td');\n      day.innerHTML = key;\n      row.appendChild(day);\n\n      const time = document.createElement('td');\n      time.innerHTML = operatingHours[key];\n      row.appendChild(time);\n\n      hours.appendChild(row);\n    }\n  }\n};\n\nconst markRestaurantAsFavourite = (button) => {\n  const icon = button.querySelector('i');\n  const text = button.querySelector('span');\n  text.innerHTML = 'Unmark restaurant as favourite';\n  icon.classList.add('fas', 'marked');\n  icon.classList.remove('far', 'unmarked');\n  icon.setAttribute('aria-label', 'Restaurant is currently marked as favourite');\n};\n\nconst unmarkRestaurantAsFavourite = (button) => {\n  const icon = button.querySelector('i');\n  const text = button.querySelector('span');\n  text.innerHTML = 'Mark restaurant as favourite';\n  icon.classList.add('far', 'unmarked');\n  icon.classList.remove('fas', 'marked');\n  icon.setAttribute('aria-label', 'Restaurant is not currently marked as favourite');\n};\n\n/**\n * Set state and text for mark as favourite button.\n */\nconst fillMarkAsFavouriteHTML = (isFavourite = self.restaurant.is_favorite) => {\n  const favouriteButton = document.getElementById('mark-as-favourite');\n  if (stringToBoolean(isFavourite)) {\n    markRestaurantAsFavourite(favouriteButton);\n  } else {\n    unmarkRestaurantAsFavourite(favouriteButton);\n  }\n};\n\n/**\n * Get current restaurant from page URL.\n */\nconst fetchReviews = (id) => {\n  DBHelper.fetchReviewsByRestaurantId(id, (error, reviews) => {\n    self.reviews = reviews;\n    if (!reviews) {\n      console.error(error);\n      return;\n    }\n    requestAnimationFrame(fillReviewsHTML.bind(Ã¸, reviews));\n    DBHelper.getOutboxReviews(id, (error, outboxReviews) => {\n      if (error) {\n        console.log(error);\n      } else {\n        self.outboxReviews = outboxReviews;\n        requestAnimationFrame(fillSendingReviewsHTML.bind(Ã¸, outboxReviews));\n      }\n    });\n  });\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nconst fillReviewsHTML = (reviews = self.reviews) => {\n  if (!reviews || reviews.length === 0) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach((review) => {\n    ul.insertBefore(createReviewHTML(review), ul.firstChild);\n  });\n};\n\nconst fillSendingReviewsHTML = (outboxReviews = self.outboxReviews) => {\n  if (!outboxReviews || outboxReviews.length === 0) return;\n\n  const ul = document.getElementById('reviews-list');\n  outboxReviews.forEach((outboxReview) => {\n    const { request_id, ...review } = outboxReview;\n    ul.insertBefore(createReviewHTML(review, true, request_id), ul.firstChild);\n  });\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\nconst createReviewHTML = (review, sending, requestId) => {\n  const article = document.createElement('article');\n  article.className = 'review';\n\n  const headerSpan = document.createElement('span');\n  headerSpan.className = 'review-header';\n\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  name.className = 'review-name';\n  headerSpan.appendChild(name);\n\n  const date = document.createElement('p');\n\n  if (sending) {\n    const icon = document.createElement('i');\n    icon.classList.add('far', 'fa-clock');\n    const loadingText = document.createElement('span');\n    loadingText.innerHTML = 'Sending';\n    date.appendChild(icon);\n    date.appendChild(loadingText);\n  } else {\n    const dateText = formatDate(new Date(review.updatedAt));\n    date.innerHTML = dateText;\n  }\n\n  date.className = 'review-date';\n  headerSpan.appendChild(date);\n  article.appendChild(headerSpan);\n\n  const contentSpan = document.createElement('span');\n  contentSpan.className = 'review-content';\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  rating.className = 'review-rating';\n  contentSpan.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  contentSpan.appendChild(comments);\n  article.appendChild(contentSpan);\n\n  if (sending) {\n    article.setAttribute('data-id', requestId);\n    article.setAttribute('aria-busy', 'true');\n    article.classList.add('sending');\n  }\n\n  return article;\n};\n\nconst updateReviewHTML = (error, requestId, review) => {\n  const reviewElement = document.querySelector(`[data-id=\"${requestId}\"]`);\n  if (error) {\n    if (reviewElement) { // for error, no need to add to UI if it doesn't exist\n      const date = reviewElement.querySelector('.review-date');\n      date.innerHTML = '';\n      const icon = document.createElement('i');\n      icon.classList.add('fas', 'fa-exclamation-triangle');\n      const errorText = document.createElement('span');\n      errorText.innerHTML = 'Sending failed';\n      date.appendChild(icon);\n      date.appendChild(errorText);\n      date.classList.add('error');\n    }\n  } else {\n    const ul = document.getElementById('reviews-list');\n    if (ul && self.restaurant) { // only update if the restaurant is loaded\n      if (reviewElement) {\n        reviewElement.classList.remove('sending');\n        const date = reviewElement.querySelector('.review-date');\n        const dateText = formatDate(new Date(review.updatedAt));\n        date.innerHTML = dateText;\n      } else {\n        createReviewHTML(review, false);\n      }\n    }\n  }\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nconst fillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\nconst getUrlParam = (name, url) => {\n  url = url || window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n\n\n  const results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst setMarkAsFavouriteFetchingState = (button, spinner) => {\n  button.setAttribute('disabled', true);\n  button.setAttribute('aria-busy', 'true');\n  spinner.classList.add('show');\n};\n\nconst removeMarkAsFavouriteFetchingState = (button, spinner) => {\n  button.removeAttribute('disabled');\n  button.setAttribute('aria-busy', 'false');\n  spinner.classList.remove('show');\n};\n\nconst toggleRestaurantAsFavourite = () => {\n  const isFavourite = stringToBoolean(self.restaurant.is_favorite);\n  const newIsFavourite = (!isFavourite) && isFavourite !== 'false';\n  const restaurantId = self.restaurant.id;\n  const button = document.getElementById('mark-as-favourite');\n  const spinner = document.getElementById('favourite-spinner');\n  let failedUpdateCallback;\n  let successMessage;\n  let errorMessage;\n  if (newIsFavourite) {\n    markRestaurantAsFavourite(button);\n    failedUpdateCallback = unmarkRestaurantAsFavourite;\n    successMessage = 'Restaurant has been marked as favourite';\n    errorMessage = 'An error occurred marking restaurant as favourite';\n  } else {\n    unmarkRestaurantAsFavourite(button);\n    failedUpdateCallback = markRestaurantAsFavourite;\n    successMessage = 'Restaurant has been unmarked as favourite';\n    errorMessage = 'An error occurred unmarking restaurant as favourite';\n  }\n  setMarkAsFavouriteFetchingState(button, spinner);\n  DBHelper.setRestaurantFavouriteStatus(restaurantId, newIsFavourite, (error, updatedRestaurant) => {\n    removeMarkAsFavouriteFetchingState(button, spinner);\n    if (!updatedRestaurant) {\n      console.error(error);\n      failedUpdateCallback(button);\n      enqueueToast(errorMessage, 'error');\n      return;\n    }\n    self.restaurant = updatedRestaurant;\n    enqueueToast(successMessage, 'success');\n  });\n};\n\nfunction showConnectionStatus() {\n  if (navigator.onLine && !previouslyConnected) { // user came back online\n    enqueueToast('You are back online', 'success');\n  } else if (!navigator.onLine && previouslyConnected) { // user went offline\n    enqueueToast('You are offline', 'error');\n  }\n\n  previouslyConnected = navigator.onLine;\n}\n","/** **** modal ****** */\n\nlet previouslyFocusedElement;\n\nfunction openModal() {\n  previouslyFocusedElement = document.activeElement;\n  const overlay = document.querySelector('.overlay');\n  const interactiveElements = overlay.querySelectorAll('button, input, textarea');\n  overlay.classList.add('show');\n  document.body.classList.add('has-open-modal');\n  document.addEventListener('keydown', trapTabKey);\n  // focus the first element in the overlay. timeout is needed because of CSS transition\n  setTimeout(() => {\n    interactiveElements[0].focus();\n  }, 100);\n}\n\nfunction closeModal() {\n  clearFormErrors();\n  document.querySelector('.overlay').classList.remove('show');\n  document.body.classList.remove('has-open-modal');\n  document.removeEventListener('keydown', trapTabKey);\n  if (previouslyFocusedElement) {\n    previouslyFocusedElement.focus();\n  }\n}\n\nfunction trapTabKey(event) {\n  const overlay = document.querySelector('.overlay');\n  const interactiveElements = overlay.querySelectorAll('button, input');\n  const firstElement = interactiveElements[0];\n  const lastElement = interactiveElements[interactiveElements.length - 1];\n  if (event.key && event.key === 'Tab') {\n    if (event.shiftKey && event.target === firstElement) { // shift + tab\n      event.preventDefault();\n      lastElement.focus();\n    } else if (!event.shiftKey && event.target === lastElement) { // tab\n      event.preventDefault();\n      firstElement.focus();\n    }\n  }\n}\n\n/** **** handle errors ****** */\n\nfunction setNameInputError() {\n  const nameInput = document.getElementById('name');\n  const nameInputError = document.getElementById('name-error');\n  nameInput.classList.add('has-error');\n  nameInput.setAttribute('aria-invalid', 'true');\n  nameInput.setAttribute('aria-describedby', 'name-error');\n  nameInputError.classList.add('show');\n}\n\nfunction clearNameInputError() {\n  const nameInput = document.getElementById('name');\n  const nameInputError = document.getElementById('name-error');\n  nameInput.classList.remove('has-error');\n  nameInput.removeAttribute('aria-invalid');\n  nameInput.removeAttribute('aria-describedby');\n  nameInputError.classList.remove('show');\n}\n\nfunction setRatingInputError() {\n  const ratingInput = document.getElementById('rating');\n  const ratingInputError = document.getElementById('rating-error');\n  ratingInput.classList.add('has-error');\n  ratingInput.setAttribute('aria-invalid', 'true');\n  ratingInput.setAttribute('aria-describedby', 'rating-error');\n  ratingInputError.classList.add('show');\n}\n\nfunction clearRatingInputError() {\n  const ratingInput = document.getElementById('rating');\n  const ratingInputError = document.getElementById('rating-error');\n  ratingInput.classList.remove('has-error');\n  ratingInput.removeAttribute('aria-invalid');\n  ratingInput.removeAttribute('aria-describedby');\n  ratingInputError.classList.remove('show');\n}\n\nfunction setCommentInputError() {\n  const commentInput = document.getElementById('comments');\n  const commentInputError = document.getElementById('comments-error');\n  commentInput.classList.add('has-error');\n  commentInput.setAttribute('aria-invalid', 'true');\n  commentInput.setAttribute('aria-describedby', 'comments-error');\n  commentInputError.classList.add('show');\n}\n\nfunction clearCommentInputError() {\n  const commentInput = document.getElementById('comments');\n  const commentInputError = document.getElementById('comments-error');\n  commentInput.classList.remove('has-error');\n  commentInput.removeAttribute('aria-invalid');\n  commentInput.removeAttribute('aria-describedby');\n  commentInputError.classList.remove('show');\n}\n\nconst errorFunctions = {\n  name: {\n    setError: setNameInputError,\n    clearError: clearNameInputError,\n  },\n  rating: {\n    setError: setRatingInputError,\n    clearError: clearRatingInputError,\n  },\n  comments: {\n    setError: setCommentInputError,\n    clearError: clearCommentInputError,\n  },\n};\n\n/** **** validation ****** */\n\nfunction validateInput(id, value) {\n  const input = document.getElementById(id).cloneNode();\n  let inputValue;\n  if (value !== undefined) {\n    inputValue = value;\n  } else {\n    inputValue = input.value;\n  }\n  inputValue = id === 'rating' ? Number.parseInt(inputValue, 10) : inputValue;\n  if (inputValue) {\n    errorFunctions[id].clearError();\n    return true;\n  }\n  requestAnimationFrame(errorFunctions[id].setError);\n  return false;\n}\n\nfunction validateAllInputs() {\n  let error = false;\n  const inputIds = ['name', 'rating', 'comments'];\n  const invalidInputs = [];\n  inputIds.forEach((id) => {\n    const inputValid = validateInput(id);\n    if (!inputValid) {\n      invalidInputs.push(id);\n      error = true;\n    }\n  });\n  return { error, invalidInputs };\n}\n\n/** **** handle events ****** */\n\nfunction handleRangeChange(event) {\n  const ratingValue = document.querySelector('.rating-value');\n  ratingValue.innerHTML = `${event.target.value}/5`;\n  validateInput(event.target.name, event.target.value);\n}\n\nfunction handleInputKeyUp(event) {\n  if (!(event.key && event.key === 'Tab')) {\n    // when tab is used, allow the onblur handler to perform validation\n    // when the tab key is pressed, focus is already on the next input when the event fires\n    // so the wrong input is validated\n    validateInput(event.target.name, event.target.value);\n  }\n}\n\nfunction handleInputBlur(event) {\n  validateInput(event.target.name, event.target.value);\n}\n\nfunction getFormInputValues() {\n  const inputIds = ['name', 'rating', 'comments'];\n  const values = {};\n  inputIds.forEach((id) => {\n    values[id] = document.getElementById(id).value;\n  });\n  return values;\n}\n\nfunction clearForm() {\n  document.getElementById('name').value = '';\n  document.getElementById('rating').value = '0';\n  document.querySelector('.rating-value').innerHTML = '0/5';\n  document.getElementById('comments').value = '';\n}\n\nfunction clearFormErrors() {\n  document.getElementById('name-error').classList.remove('show');\n  document.getElementById('rating-error').classList.remove('show');\n  document.getElementById('comments-error').classList.remove('show');\n  document.getElementById('add-review-form-error').classList.remove('show');\n  document.getElementById('add-review-form-error').innerHTML = '';\n  document.getElementById('name').classList.remove('has-error');\n  document.getElementById('rating').classList.remove('has-error');\n  document.getElementById('comments').classList.remove('has-error');\n}\n\nfunction handleAddReviewSubmit() {\n  const { error, invalidInputs } = validateAllInputs();\n  if (!error) {\n    const { name, rating, comments } = getFormInputValues();\n    if ((!navigator.serviceWorker) || (!navigator.serviceWorker.controller)) {\n      // perform regular fetch and regular updates\n      const submitButton = document.getElementById('add-review-submit');\n      submitButton.setAttribute('disabled', true);\n      submitButton.setAttribute('aria-busy', 'true');\n      DBHelper.addReview(self.restaurant.id, name, rating, comments, (error, newReview) => {\n        submitButton.removeAttribute('disabled');\n        submitButton.setAttribute('aria-busy', 'false');\n        if (error) {\n          enqueueToast('An error occurred. Please try again', 'error');\n          console.log(error);\n        } else {\n          enqueueToast(`${name}'s review has been saved`, 'success');\n          const ul = document.getElementById('reviews-list');\n          ul.insertBefore(createReviewHTML(newReview), ul.firstChild);\n          closeModal();\n          clearForm();\n        }\n      });\n    } else {\n      const requestId = `${self.restaurant.id}-${Date.now()}`;\n      const newReview = {\n        name, rating, comments, restaurant_id: self.restaurant.id,\n      };\n      const ul = document.getElementById('reviews-list');\n      ul.insertBefore(createReviewHTML(newReview, true, requestId), ul.firstChild);\n\n      if (('onLine' in navigator) && !navigator.onLine) {\n        enqueueToast('Your review will be submitted when you are back online');\n      }\n\n      closeModal();\n      clearForm();\n      navigator.serviceWorker.controller.postMessage({\n        type: 'post-review',\n        review: newReview,\n        requestId,\n      });\n    }\n  } else { // form errors not cleared\n    const formError = document.getElementById('add-review-form-error');\n    const errorText = `Invalid input for: ${invalidInputs.join(', ')}`;\n    formError.innerHTML = errorText;\n    formError.classList.add('show');\n    document.getElementById(invalidInputs[0]).focus();\n  }\n}\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n}\n"]}