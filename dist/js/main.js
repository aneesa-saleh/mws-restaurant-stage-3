"use strict";var restaurants,neighborhoods,cuisines,newMap,markers=[];document.addEventListener("DOMContentLoaded",function(e){initMap(),fetchNeighborhoods(),fetchCuisines(),registerServiceWorker(),window.caches&&setInterval(cleanMapboxTilesCache,5e3)});var fetchNeighborhoods=function(){DBHelper.fetchNeighborhoods(function(e,t){e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})},fillNeighborhoodsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,n=document.getElementById("neighborhoods-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})},fetchCuisines=function(){DBHelper.fetchCuisines(function(e,t){e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})},fillCuisinesHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,n=document.getElementById("cuisines-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})},initMap=function(){self.newMap=L.map("map",{center:[40.722216,-73.987501],zoom:12,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoiYW5lZXNhLXNhbGVoIiwiYSI6ImNqa2xmZHVwMDFoYW4zdnAwYWplMm53bHEifQ.V11dDOtEnWSwTxY-C8mJLw",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),updateRestaurants()},updateRestaurants=function(){var e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,a=t.selectedIndex,r=e[n].value,o=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(r,o,function(e,t){e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})},resetRestaurants=function(e){self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(function(e){return e.remove()}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,t=document.getElementById("restaurants-list");e.forEach(function(e){t.append(createRestaurantHTML(e))}),addMarkersToMap()},createRestaurantHTML=function(e){var t=document.createElement("article"),n=document.createElement("picture"),a=document.createElement("source");a.media="(min-width: 451px) and (max-width: 749px), (min-width: 950px)",a.srcset=DBHelper.imageUrlForRestaurant(e,{size:"medium"}),a.type="image/jpeg",n.appendChild(a);var r=document.createElement("source");r.media="(max-width: 450px), (min-width: 750px) and (max-width: 949px)",r.srcset=DBHelper.imageUrlForRestaurant(e,{size:"small"}),r.type="image/jpeg",n.appendChild(r);var o=document.createElement("img");o.className="restaurant-img",o.srcset=DBHelper.imageUrlForRestaurant(e,{size:"medium"}),o.src=DBHelper.imageUrlForRestaurant(e,{size:"medium",singleValue:!0}),o.alt=e.alt,n.appendChild(o),t.append(n);var s=document.createElement("span"),i=document.createElement("h2");i.innerHTML=e.name,s.append(i);var c=document.createElement("p");c.innerHTML=e.neighborhood,s.append(c);var l=document.createElement("p");l.innerHTML=e.address,s.append(l);var d=document.createElement("a");return d.innerHTML="View Details",d.setAttribute("aria-label","View Details of ".concat(e.name)),d.href=DBHelper.urlForRestaurant(e),s.append(d),t.append(s),t},addMarkersToMap=function(){(0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var t=DBHelper.mapMarkerForRestaurant(e,self.newMap);t.on("click",function(){window.location.href=t.options.url}),self.markers.push(t)})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
