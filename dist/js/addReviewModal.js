"use strict";

/** **** modal ****** */
var previouslyFocusedElement;

function openModal() {
  previouslyFocusedElement = document.activeElement;
  var overlay = document.querySelector('.overlay');
  var interactiveElements = overlay.querySelectorAll('button, input, textarea');
  overlay.classList.add('show');
  document.body.classList.add('has-open-modal');
  document.addEventListener('keydown', trapTabKey); // focus the first element in the overlay. timeout is needed because of CSS transition

  setTimeout(function () {
    interactiveElements[0].focus();
  }, 100);
}

function closeModal() {
  document.querySelector('.overlay').classList.remove('show');
  document.body.classList.remove('has-open-modal');
  document.removeEventListener('keydown', trapTabKey);

  if (previouslyFocusedElement) {
    previouslyFocusedElement.focus();
  }
}

function trapTabKey(event) {
  var overlay = document.querySelector('.overlay');
  var interactiveElements = overlay.querySelectorAll('button, input');
  var TAB = 9;
  var firstElement = interactiveElements[0];
  var lastElement = interactiveElements[interactiveElements.length - 1];

  if (event.keyCode === TAB) {
    if (event.shiftKey && event.target === firstElement) {
      // shift + tab
      event.preventDefault();
      lastElement.focus();
    } else if (!event.shiftKey && event.target === lastElement) {
      // tab
      event.preventDefault();
      firstElement.focus();
    }
  }
}
/** **** handle errors ****** */


function setNameInputError() {
  var nameInput = document.getElementById('name');
  var nameInputError = document.getElementById('name-error');
  nameInput.classList.add('has-error');
  nameInput.setAttribute('aria-invalid', 'true');
  nameInput.setAttribute('aria-describedby', 'name-error');
  nameInputError.classList.add('show');
}

function clearNameInputError() {
  var nameInput = document.getElementById('name');
  var nameInputError = document.getElementById('name-error');
  nameInput.classList.remove('has-error');
  nameInput.removeAttribute('aria-invalid');
  nameInput.removeAttribute('aria-describedby');
  nameInputError.classList.remove('show');
}

function setRatingInputError() {
  var ratingInput = document.getElementById('rating');
  var ratingInputError = document.getElementById('rating-error');
  ratingInput.classList.add('has-error');
  ratingInput.setAttribute('aria-invalid', 'true');
  ratingInput.setAttribute('aria-describedby', 'rating-error');
  ratingInputError.classList.add('show');
}

function clearRatingInputError() {
  var ratingInput = document.getElementById('rating');
  var ratingInputError = document.getElementById('rating-error');
  ratingInput.classList.remove('has-error');
  ratingInput.removeAttribute('aria-invalid');
  ratingInput.removeAttribute('aria-describedby');
  ratingInputError.classList.remove('show');
}

function setCommentInputError() {
  var commentInput = document.getElementById('comments');
  var commentInputError = document.getElementById('comments-error');
  commentInput.classList.add('has-error');
  commentInput.setAttribute('aria-invalid', 'true');
  commentInput.setAttribute('aria-describedby', 'comments-error');
  commentInputError.classList.add('show');
}

function clearCommentInputError() {
  var commentInput = document.getElementById('comments');
  var commentInputError = document.getElementById('comments-error');
  commentInput.classList.remove('has-error');
  commentInput.removeAttribute('aria-invalid');
  commentInput.removeAttribute('aria-describedby');
  commentInputError.classList.remove('show');
}

var errorFunctions = {
  name: {
    setError: setNameInputError,
    clearError: clearNameInputError
  },
  rating: {
    setError: setRatingInputError,
    clearError: clearRatingInputError
  },
  comments: {
    setError: setCommentInputError,
    clearError: clearCommentInputError
  }
};
/** **** validation ****** */

function validateInput(id) {
  var input = document.getElementById(id).cloneNode();
  var value = id === 'rating' ? Number.parseInt(input.value, 10) : input.value;

  if (value) {
    errorFunctions[id].clearError();
    return true;
  }

  errorFunctions[id].setError();
  return false;
}

function validateAllInputs() {
  var allInputsValid = true;
  var inputIds = ['name', 'rating', 'comments'];
  inputIds.forEach(function (id) {
    var inputValid = validateInput(id);
    allInputsValid = allInputsValid && inputValid;
  });
  return allInputsValid;
}
/** **** handle events ****** */


function handleRangeChange(event) {
  var ratingValue = document.querySelector('.rating-value');
  ratingValue.innerHTML = "".concat(event.target.value, ".0");
}

function handleNameInputBlur() {
  validateInput('name');
}

function handleRatingInputBlur() {
  validateInput('rating');
}

function handleCommentInputBlur() {
  validateInput('comments');
}

function getFormInputValues() {
  var inputIds = ['name', 'rating', 'comments'];
  var values = {};
  inputIds.forEach(function (id) {
    values[id] = document.getElementById(id).value;
  });
  return values;
}

function clearForm() {
  document.getElementById('name').value = '';
  document.getElementById('rating').value = '0';
  document.querySelector('.rating-value').innerHTML = '0.0';
  document.getElementById('comments').value = '';
}

function handleAddReviewSubmit() {
  var allInputsValid = validateAllInputs();

  if (allInputsValid) {
    var _getFormInputValues = getFormInputValues(),
        name = _getFormInputValues.name,
        rating = _getFormInputValues.rating,
        comments = _getFormInputValues.comments;

    if (!navigator.serviceWorker || !navigator.serviceWorker.controller) {
      // perform regular fetch and regular updates
      var submitButton = document.getElementById('add-review-submit');
      submitButton.setAttribute('disabled', true);
      submitButton.setAttribute('aria-busy', 'true');
      DBHelper.addReview(self.restaurant.id, name, rating, comments, function (error, newReview) {
        submitButton.removeAttribute('disabled');
        submitButton.setAttribute('aria-busy', 'false');

        if (error) {
          enqueueToast('An error occurred. Please try again', 'error');
          console.log(error);
        } else {
          enqueueToast("".concat(name, "'s review has been saved"), 'success');
          var ul = document.getElementById('reviews-list');
          ul.insertBefore(createReviewHTML(newReview), ul.firstChild);
          closeModal();
          clearForm();
        }
      });
    } else {
      var requestId = "".concat(self.restaurant.id, "-").concat(Date.now());
      var newReview = {
        name: name,
        rating: rating,
        comments: comments,
        restaurant_id: self.restaurant.id
      };
      var ul = document.getElementById('reviews-list');
      ul.insertBefore(createReviewHTML(newReview, true, requestId), ul.firstChild);

      if ('onLine' in navigator && !navigator.onLine) {
        enqueueToast('Your review will be submitted when you are back online');
      }

      closeModal();
      clearForm();
      navigator.serviceWorker.controller.postMessage({
        type: 'post-review',
        review: newReview,
        requestId: requestId
      });
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZFJldmlld01vZGFsLmpzIl0sIm5hbWVzIjpbInByZXZpb3VzbHlGb2N1c2VkRWxlbWVudCIsIm9wZW5Nb2RhbCIsImRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIm92ZXJsYXkiLCJxdWVyeVNlbGVjdG9yIiwiaW50ZXJhY3RpdmVFbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjbGFzc0xpc3QiLCJhZGQiLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsInRyYXBUYWJLZXkiLCJzZXRUaW1lb3V0IiwiZm9jdXMiLCJjbG9zZU1vZGFsIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiVEFCIiwiZmlyc3RFbGVtZW50IiwibGFzdEVsZW1lbnQiLCJsZW5ndGgiLCJrZXlDb2RlIiwic2hpZnRLZXkiLCJ0YXJnZXQiLCJwcmV2ZW50RGVmYXVsdCIsInNldE5hbWVJbnB1dEVycm9yIiwibmFtZUlucHV0IiwiZ2V0RWxlbWVudEJ5SWQiLCJuYW1lSW5wdXRFcnJvciIsInNldEF0dHJpYnV0ZSIsImNsZWFyTmFtZUlucHV0RXJyb3IiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRSYXRpbmdJbnB1dEVycm9yIiwicmF0aW5nSW5wdXQiLCJyYXRpbmdJbnB1dEVycm9yIiwiY2xlYXJSYXRpbmdJbnB1dEVycm9yIiwic2V0Q29tbWVudElucHV0RXJyb3IiLCJjb21tZW50SW5wdXQiLCJjb21tZW50SW5wdXRFcnJvciIsImNsZWFyQ29tbWVudElucHV0RXJyb3IiLCJlcnJvckZ1bmN0aW9ucyIsIm5hbWUiLCJzZXRFcnJvciIsImNsZWFyRXJyb3IiLCJyYXRpbmciLCJjb21tZW50cyIsInZhbGlkYXRlSW5wdXQiLCJpZCIsImlucHV0IiwiY2xvbmVOb2RlIiwidmFsdWUiLCJOdW1iZXIiLCJwYXJzZUludCIsInZhbGlkYXRlQWxsSW5wdXRzIiwiYWxsSW5wdXRzVmFsaWQiLCJpbnB1dElkcyIsImZvckVhY2giLCJpbnB1dFZhbGlkIiwiaGFuZGxlUmFuZ2VDaGFuZ2UiLCJyYXRpbmdWYWx1ZSIsImlubmVySFRNTCIsImhhbmRsZU5hbWVJbnB1dEJsdXIiLCJoYW5kbGVSYXRpbmdJbnB1dEJsdXIiLCJoYW5kbGVDb21tZW50SW5wdXRCbHVyIiwiZ2V0Rm9ybUlucHV0VmFsdWVzIiwidmFsdWVzIiwiY2xlYXJGb3JtIiwiaGFuZGxlQWRkUmV2aWV3U3VibWl0IiwibmF2aWdhdG9yIiwic2VydmljZVdvcmtlciIsImNvbnRyb2xsZXIiLCJzdWJtaXRCdXR0b24iLCJEQkhlbHBlciIsImFkZFJldmlldyIsInNlbGYiLCJyZXN0YXVyYW50IiwiZXJyb3IiLCJuZXdSZXZpZXciLCJlbnF1ZXVlVG9hc3QiLCJjb25zb2xlIiwibG9nIiwidWwiLCJpbnNlcnRCZWZvcmUiLCJjcmVhdGVSZXZpZXdIVE1MIiwiZmlyc3RDaGlsZCIsInJlcXVlc3RJZCIsIkRhdGUiLCJub3ciLCJyZXN0YXVyYW50X2lkIiwib25MaW5lIiwicG9zdE1lc3NhZ2UiLCJ0eXBlIiwicmV2aWV3Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBRUEsSUFBSUEsd0JBQUo7O0FBRUEsU0FBU0MsU0FBVCxHQUFxQjtBQUNuQkQsRUFBQUEsd0JBQXdCLEdBQUdFLFFBQVEsQ0FBQ0MsYUFBcEM7QUFDQSxNQUFNQyxPQUFPLEdBQUdGLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixVQUF2QixDQUFoQjtBQUNBLE1BQU1DLG1CQUFtQixHQUFHRixPQUFPLENBQUNHLGdCQUFSLENBQXlCLHlCQUF6QixDQUE1QjtBQUNBSCxFQUFBQSxPQUFPLENBQUNJLFNBQVIsQ0FBa0JDLEdBQWxCLENBQXNCLE1BQXRCO0FBQ0FQLEVBQUFBLFFBQVEsQ0FBQ1EsSUFBVCxDQUFjRixTQUFkLENBQXdCQyxHQUF4QixDQUE0QixnQkFBNUI7QUFDQVAsRUFBQUEsUUFBUSxDQUFDUyxnQkFBVCxDQUEwQixTQUExQixFQUFxQ0MsVUFBckMsRUFObUIsQ0FPbkI7O0FBQ0FDLEVBQUFBLFVBQVUsQ0FBQyxZQUFNO0FBQ2ZQ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RWQsSUFBSSxDQUFDQyxVQUFMLENBQWdCNUI7QUFEdkMsT0FBbEI7QUFHQSxVQUFNa0MsRUFBRSxHQUFHakYsUUFBUSxDQUFDMkIsY0FBVCxDQUF3QixjQUF4QixDQUFYO0FBQ0FzRCxNQUFBQSxFQUFFLENBQUNDLFlBQUgsQ0FBZ0JDLGdCQUFnQixDQUFDTixTQUFELEVBQVksSUFBWixFQUFrQlEsU0FBbEIsQ0FBaEMsRUFBOERKLEVBQUUsQ0FBQ0csVUFBakU7O0FBRUEsVUFBSyxZQUFZaEIsU0FBYixJQUEyQixDQUFDQSxTQUFTLENBQUNxQixNQUExQyxFQUFrRDtBQUNoRFgsUUFBQUEsWUFBWSxDQUFDLHdEQUFELENBQVo7QUFDRDs7QUFFRGpFLE1BQUFBLFVBQVU7QUFDVnFELE1BQUFBLFNBQVM7QUFDVEUsTUFBQUEsU0FBUyxDQUFDQyxhQUFWLENBQXdCQyxVQUF4QixDQUFtQ29CLFdBQW5DLENBQStDO0FBQzdDQyxRQUFBQSxJQUFJLEVBQUUsYUFEdUM7QUFFN0NDLFFBQUFBLE1BQU0sRUFBRWYsU0FGcUM7QUFHN0NRLFFBQUFBLFNBQVMsRUFBVEE7QUFINkMsT0FBL0M7QUFLRDtBQUNGO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogKioqKiBtb2RhbCAqKioqKiogKi9cblxubGV0IHByZXZpb3VzbHlGb2N1c2VkRWxlbWVudDtcblxuZnVuY3Rpb24gb3Blbk1vZGFsKCkge1xuICBwcmV2aW91c2x5Rm9jdXNlZEVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICBjb25zdCBvdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm92ZXJsYXknKTtcbiAgY29uc3QgaW50ZXJhY3RpdmVFbGVtZW50cyA9IG92ZXJsYXkucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uLCBpbnB1dCwgdGV4dGFyZWEnKTtcbiAgb3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7XG4gIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnaGFzLW9wZW4tbW9kYWwnKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRyYXBUYWJLZXkpO1xuICAvLyBmb2N1cyB0aGUgZmlyc3QgZWxlbWVudCBpbiB0aGUgb3ZlcmxheS4gdGltZW91dCBpcyBuZWVkZWQgYmVjYXVzZSBvZiBDU1MgdHJhbnNpdGlvblxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBpbnRlcmFjdGl2ZUVsZW1lbnRzWzBdLmZvY3VzKCk7XG4gIH0sIDEwMCk7XG59XG5cbmZ1bmN0aW9uIGNsb3NlTW9kYWwoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vdmVybGF5JykuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2hhcy1vcGVuLW1vZGFsJyk7XG4gIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0cmFwVGFiS2V5KTtcbiAgaWYgKHByZXZpb3VzbHlGb2N1c2VkRWxlbWVudCkge1xuICAgIHByZXZpb3VzbHlGb2N1c2VkRWxlbWVudC5mb2N1cygpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRyYXBUYWJLZXkoZXZlbnQpIHtcbiAgY29uc3Qgb3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vdmVybGF5Jyk7XG4gIGNvbnN0IGludGVyYWN0aXZlRWxlbWVudHMgPSBvdmVybGF5LnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbiwgaW5wdXQnKTtcbiAgY29uc3QgVEFCID0gOTtcbiAgY29uc3QgZmlyc3RFbGVtZW50ID0gaW50ZXJhY3RpdmVFbGVtZW50c1swXTtcbiAgY29uc3QgbGFzdEVsZW1lbnQgPSBpbnRlcmFjdGl2ZUVsZW1lbnRzW2ludGVyYWN0aXZlRWxlbWVudHMubGVuZ3RoIC0gMV07XG4gIGlmIChldmVudC5rZXlDb2RlID09PSBUQUIpIHtcbiAgICBpZiAoZXZlbnQuc2hpZnRLZXkgJiYgZXZlbnQudGFyZ2V0ID09PSBmaXJzdEVsZW1lbnQpIHsgLy8gc2hpZnQgKyB0YWJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBsYXN0RWxlbWVudC5mb2N1cygpO1xuICAgIH0gZWxzZSBpZiAoIWV2ZW50LnNoaWZ0S2V5ICYmIGV2ZW50LnRhcmdldCA9PT0gbGFzdEVsZW1lbnQpIHsgLy8gdGFiXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZmlyc3RFbGVtZW50LmZvY3VzKCk7XG4gICAgfVxuICB9XG59XG5cbi8qKiAqKioqIGhhbmRsZSBlcnJvcnMgKioqKioqICovXG5cbmZ1bmN0aW9uIHNldE5hbWVJbnB1dEVycm9yKCkge1xuICBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmFtZScpO1xuICBjb25zdCBuYW1lSW5wdXRFcnJvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYW1lLWVycm9yJyk7XG4gIG5hbWVJbnB1dC5jbGFzc0xpc3QuYWRkKCdoYXMtZXJyb3InKTtcbiAgbmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnYXJpYS1pbnZhbGlkJywgJ3RydWUnKTtcbiAgbmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScsICduYW1lLWVycm9yJyk7XG4gIG5hbWVJbnB1dEVycm9yLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJOYW1lSW5wdXRFcnJvcigpIHtcbiAgY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hbWUnKTtcbiAgY29uc3QgbmFtZUlucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmFtZS1lcnJvcicpO1xuICBuYW1lSW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgnaGFzLWVycm9yJyk7XG4gIG5hbWVJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcpO1xuICBuYW1lSW5wdXQucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5Jyk7XG4gIG5hbWVJbnB1dEVycm9yLmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTtcbn1cblxuZnVuY3Rpb24gc2V0UmF0aW5nSW5wdXRFcnJvcigpIHtcbiAgY29uc3QgcmF0aW5nSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nJyk7XG4gIGNvbnN0IHJhdGluZ0lucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nLWVycm9yJyk7XG4gIHJhdGluZ0lucHV0LmNsYXNzTGlzdC5hZGQoJ2hhcy1lcnJvcicpO1xuICByYXRpbmdJbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcsICd0cnVlJyk7XG4gIHJhdGluZ0lucHV0LnNldEF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScsICdyYXRpbmctZXJyb3InKTtcbiAgcmF0aW5nSW5wdXRFcnJvci5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyUmF0aW5nSW5wdXRFcnJvcigpIHtcbiAgY29uc3QgcmF0aW5nSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nJyk7XG4gIGNvbnN0IHJhdGluZ0lucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nLWVycm9yJyk7XG4gIHJhdGluZ0lucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ2hhcy1lcnJvcicpO1xuICByYXRpbmdJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcpO1xuICByYXRpbmdJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknKTtcbiAgcmF0aW5nSW5wdXRFcnJvci5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XG59XG5cbmZ1bmN0aW9uIHNldENvbW1lbnRJbnB1dEVycm9yKCkge1xuICBjb25zdCBjb21tZW50SW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29tbWVudHMnKTtcbiAgY29uc3QgY29tbWVudElucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29tbWVudHMtZXJyb3InKTtcbiAgY29tbWVudElucHV0LmNsYXNzTGlzdC5hZGQoJ2hhcy1lcnJvcicpO1xuICBjb21tZW50SW5wdXQuc2V0QXR0cmlidXRlKCdhcmlhLWludmFsaWQnLCAndHJ1ZScpO1xuICBjb21tZW50SW5wdXQuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5JywgJ2NvbW1lbnRzLWVycm9yJyk7XG4gIGNvbW1lbnRJbnB1dEVycm9yLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJDb21tZW50SW5wdXRFcnJvcigpIHtcbiAgY29uc3QgY29tbWVudElucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbW1lbnRzJyk7XG4gIGNvbnN0IGNvbW1lbnRJbnB1dEVycm9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbW1lbnRzLWVycm9yJyk7XG4gIGNvbW1lbnRJbnB1dC5jbGFzc0xpc3QucmVtb3ZlKCdoYXMtZXJyb3InKTtcbiAgY29tbWVudElucHV0LnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1pbnZhbGlkJyk7XG4gIGNvbW1lbnRJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknKTtcbiAgY29tbWVudElucHV0RXJyb3IuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xufVxuXG5jb25zdCBlcnJvckZ1bmN0aW9ucyA9IHtcbiAgbmFtZToge1xuICAgIHNldEVycm9yOiBzZXROYW1lSW5wdXRFcnJvcixcbiAgICBjbGVhckVycm9yOiBjbGVhck5hbWVJbnB1dEVycm9yLFxuICB9LFxuICByYXRpbmc6IHtcbiAgICBzZXRFcnJvcjogc2V0UmF0aW5nSW5wdXRFcnJvcixcbiAgICBjbGVhckVycm9yOiBjbGVhclJhdGluZ0lucHV0RXJyb3IsXG4gIH0sXG4gIGNvbW1lbnRzOiB7XG4gICAgc2V0RXJyb3I6IHNldENvbW1lbnRJbnB1dEVycm9yLFxuICAgIGNsZWFyRXJyb3I6IGNsZWFyQ29tbWVudElucHV0RXJyb3IsXG4gIH0sXG59O1xuXG4vKiogKioqKiB2YWxpZGF0aW9uICoqKioqKiAqL1xuXG5mdW5jdGlvbiB2YWxpZGF0ZUlucHV0KGlkKSB7XG4gIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLmNsb25lTm9kZSgpO1xuICBjb25zdCB2YWx1ZSA9IGlkID09PSAncmF0aW5nJyA/IE51bWJlci5wYXJzZUludChpbnB1dC52YWx1ZSwgMTApIDogaW5wdXQudmFsdWU7XG4gIGlmICh2YWx1ZSkge1xuICAgIGVycm9yRnVuY3Rpb25zW2lkXS5jbGVhckVycm9yKCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgZXJyb3JGdW5jdGlvbnNbaWRdLnNldEVycm9yKCk7XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVBbGxJbnB1dHMoKSB7XG4gIGxldCBhbGxJbnB1dHNWYWxpZCA9IHRydWU7XG4gIGNvbnN0IGlucHV0SWRzID0gWyduYW1lJywgJ3JhdGluZycsICdjb21tZW50cyddO1xuICBpbnB1dElkcy5mb3JFYWNoKChpZCkgPT4ge1xuICAgIGNvbnN0IGlucHV0VmFsaWQgPSB2YWxpZGF0ZUlucHV0KGlkKTtcbiAgICBhbGxJbnB1dHNWYWxpZCA9IGFsbElucHV0c1ZhbGlkICYmIGlucHV0VmFsaWQ7XG4gIH0pO1xuICByZXR1cm4gYWxsSW5wdXRzVmFsaWQ7XG59XG5cbi8qKiAqKioqIGhhbmRsZSBldmVudHMgKioqKioqICovXG5cbmZ1bmN0aW9uIGhhbmRsZVJhbmdlQ2hhbmdlKGV2ZW50KSB7XG4gIGNvbnN0IHJhdGluZ1ZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJhdGluZy12YWx1ZScpO1xuICByYXRpbmdWYWx1ZS5pbm5lckhUTUwgPSBgJHtldmVudC50YXJnZXQudmFsdWV9LjBgO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVOYW1lSW5wdXRCbHVyKCkge1xuICB2YWxpZGF0ZUlucHV0KCduYW1lJyk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVJhdGluZ0lucHV0Qmx1cigpIHtcbiAgdmFsaWRhdGVJbnB1dCgncmF0aW5nJyk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUNvbW1lbnRJbnB1dEJsdXIoKSB7XG4gIHZhbGlkYXRlSW5wdXQoJ2NvbW1lbnRzJyk7XG59XG5cbmZ1bmN0aW9uIGdldEZvcm1JbnB1dFZhbHVlcygpIHtcbiAgY29uc3QgaW5wdXRJZHMgPSBbJ25hbWUnLCAncmF0aW5nJywgJ2NvbW1lbnRzJ107XG4gIGNvbnN0IHZhbHVlcyA9IHt9O1xuICBpbnB1dElkcy5mb3JFYWNoKChpZCkgPT4ge1xuICAgIHZhbHVlc1tpZF0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkudmFsdWU7XG4gIH0pO1xuICByZXR1cm4gdmFsdWVzO1xufVxuXG5mdW5jdGlvbiBjbGVhckZvcm0oKSB7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYW1lJykudmFsdWUgPSAnJztcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JhdGluZycpLnZhbHVlID0gJzAnO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmF0aW5nLXZhbHVlJykuaW5uZXJIVE1MID0gJzAuMCc7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb21tZW50cycpLnZhbHVlID0gJyc7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUFkZFJldmlld1N1Ym1pdCgpIHtcbiAgY29uc3QgYWxsSW5wdXRzVmFsaWQgPSB2YWxpZGF0ZUFsbElucHV0cygpO1xuICBpZiAoYWxsSW5wdXRzVmFsaWQpIHtcbiAgICBjb25zdCB7IG5hbWUsIHJhdGluZywgY29tbWVudHMgfSA9IGdldEZvcm1JbnB1dFZhbHVlcygpO1xuICAgIGlmICgoIW5hdmlnYXRvci5zZXJ2aWNlV29ya2VyKSB8fCAoIW5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmNvbnRyb2xsZXIpKSB7XG4gICAgICAvLyBwZXJmb3JtIHJlZ3VsYXIgZmV0Y2ggYW5kIHJlZ3VsYXIgdXBkYXRlc1xuICAgICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZC1yZXZpZXctc3VibWl0Jyk7XG4gICAgICBzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xuICAgICAgc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1idXN5JywgJ3RydWUnKTtcbiAgICAgIERCSGVscGVyLmFkZFJldmlldyhzZWxmLnJlc3RhdXJhbnQuaWQsIG5hbWUsIHJhdGluZywgY29tbWVudHMsIChlcnJvciwgbmV3UmV2aWV3KSA9PiB7XG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtYnVzeScsICdmYWxzZScpO1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICBlbnF1ZXVlVG9hc3QoJ0FuIGVycm9yIG9jY3VycmVkLiBQbGVhc2UgdHJ5IGFnYWluJywgJ2Vycm9yJyk7XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVucXVldWVUb2FzdChgJHtuYW1lfSdzIHJldmlldyBoYXMgYmVlbiBzYXZlZGAsICdzdWNjZXNzJyk7XG4gICAgICAgICAgY29uc3QgdWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV2aWV3cy1saXN0Jyk7XG4gICAgICAgICAgdWwuaW5zZXJ0QmVmb3JlKGNyZWF0ZVJldmlld0hUTUwobmV3UmV2aWV3KSwgdWwuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgY2xvc2VNb2RhbCgpO1xuICAgICAgICAgIGNsZWFyRm9ybSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgcmVxdWVzdElkID0gYCR7c2VsZi5yZXN0YXVyYW50LmlkfS0ke0RhdGUubm93KCl9YDtcbiAgICAgIGNvbnN0IG5ld1JldmlldyA9IHtcbiAgICAgICAgbmFtZSwgcmF0aW5nLCBjb21tZW50cywgcmVzdGF1cmFudF9pZDogc2VsZi5yZXN0YXVyYW50LmlkLFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jldmlld3MtbGlzdCcpO1xuICAgICAgdWwuaW5zZXJ0QmVmb3JlKGNyZWF0ZVJldmlld0hUTUwobmV3UmV2aWV3LCB0cnVlLCByZXF1ZXN0SWQpLCB1bC5maXJzdENoaWxkKTtcblxuICAgICAgaWYgKCgnb25MaW5lJyBpbiBuYXZpZ2F0b3IpICYmICFuYXZpZ2F0b3Iub25MaW5lKSB7XG4gICAgICAgIGVucXVldWVUb2FzdCgnWW91ciByZXZpZXcgd2lsbCBiZSBzdWJtaXR0ZWQgd2hlbiB5b3UgYXJlIGJhY2sgb25saW5lJyk7XG4gICAgICB9XG5cbiAgICAgIGNsb3NlTW9kYWwoKTtcbiAgICAgIGNsZWFyRm9ybSgpO1xuICAgICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlci5wb3N0TWVzc2FnZSh7XG4gICAgICAgIHR5cGU6ICdwb3N0LXJldmlldycsXG4gICAgICAgIHJldmlldzogbmV3UmV2aWV3LFxuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cbiJdLCJmaWxlIjoiYWRkUmV2aWV3TW9kYWwuanMifQ==
