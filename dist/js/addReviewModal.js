"use strict";

/****** modal *******/
function openModal() {
  previouslyFocusedElement = document.activeElement;
  var overlay = document.querySelector('.overlay');
  var interactiveElements = overlay.querySelectorAll('button, input, textarea');
  overlay.classList.add('show');
  document.body.classList.add('has-open-modal');
  document.addEventListener('keydown', trapTabKey);
  setTimeout(function () {
    interactiveElements[0].focus();
  }, 100);
}

function closeModal() {
  document.querySelector('.overlay').classList.remove('show');
  document.body.classList.remove('has-open-modal');
  document.removeEventListener('keydown', trapTabKey);

  if (previouslyFocusedElement) {
    previouslyFocusedElement.focus();
  }
}

function trapTabKey(event) {
  var overlay = document.querySelector('.overlay');
  var interactiveElements = overlay.querySelectorAll('button, input');
  var TAB = 9;
  var firstElement = interactiveElements[0];
  var lastElement = interactiveElements[interactiveElements.length - 1];

  if (event.keyCode === TAB) {
    if (event.shiftKey && event.target === firstElement) {
      // shift + tab
      event.preventDefault();
      lastElement.focus();
    } else if (!event.shiftKey && event.target === lastElement) {
      // tab
      event.preventDefault();
      firstElement.focus();
    }
  }
}
/****** handle errors *******/


function setNameInputError() {
  var nameInput = document.getElementById('name');
  var nameInputError = document.getElementById('name-error');
  nameInput.classList.add('has-error');
  nameInput.setAttribute('aria-invalid', 'true');
  nameInput.setAttribute('aria-describedby', 'name-error');
  nameInputError.classList.add('show');
}

function clearNameInputError() {
  var nameInput = document.getElementById('name');
  var nameInputError = document.getElementById('name-error');
  nameInput.classList.remove('has-error');
  nameInput.removeAttribute('aria-invalid');
  nameInput.removeAttribute('aria-describedby');
  nameInputError.classList.remove('show');
}

function setRatingInputError() {
  var ratingInput = document.getElementById('rating');
  var ratingInputError = document.getElementById('rating-error');
  ratingInput.classList.add('has-error');
  ratingInput.setAttribute('aria-invalid', 'true');
  ratingInput.setAttribute('aria-describedby', 'rating-error');
  ratingInputError.classList.add('show');
}

function clearRatingInputError() {
  var ratingInput = document.getElementById('rating');
  var ratingInputError = document.getElementById('rating-error');
  ratingInput.classList.remove('has-error');
  ratingInput.removeAttribute('aria-invalid');
  ratingInput.removeAttribute('aria-describedby');
  ratingInputError.classList.remove('show');
}

function setCommentInputError() {
  var commentInput = document.getElementById('comments');
  var commentInputError = document.getElementById('comments-error');
  commentInput.classList.add('has-error');
  commentInput.setAttribute('aria-invalid', 'true');
  commentInput.setAttribute('aria-describedby', 'comments-error');
  commentInputError.classList.add('show');
}

function clearCommentInputError() {
  var commentInput = document.getElementById('comments');
  var commentInputError = document.getElementById('comments-error');
  commentInput.classList.remove('has-error');
  commentInput.removeAttribute('aria-invalid');
  commentInput.removeAttribute('aria-describedby');
  commentInputError.classList.remove('show');
}

var errorFunctions = {
  name: {
    setError: setNameInputError,
    clearError: clearNameInputError
  },
  rating: {
    setError: setRatingInputError,
    clearError: clearRatingInputError
  },
  comments: {
    setError: setCommentInputError,
    clearError: clearCommentInputError
  }
};
/****** validation *******/

function validateInput(id) {
  var input = document.getElementById(id).cloneNode();
  var value = id === 'rating' ? Number.parseInt(input.value, 10) : input.value;

  if (value) {
    errorFunctions[id].clearError();
    return true;
  } else {
    errorFunctions[id].setError();
    return false;
  }
}

function validateAllInputs() {
  var allInputsValid = true;
  var inputIds = ['name', 'rating', 'comments'];
  inputIds.forEach(function (id) {
    var inputValid = validateInput(id);
    allInputsValid = allInputsValid && inputValid;
  });
  return allInputsValid;
}
/****** handle events *******/


function handleRangeChange(event) {
  var ratingValue = document.querySelector('.rating-value');
  ratingValue.innerHTML = "".concat(event.target.value, ".0");
}

function handleNameInputBlur() {
  validateInput('name');
}

function handleRatingInputBlur() {
  validateInput('rating');
}

function handleCommentInputBlur() {
  validateInput('comments');
}

function getFormInputValues() {
  var inputIds = ['name', 'rating', 'comments'];
  var values = {};
  inputIds.forEach(function (id) {
    values[id] = document.getElementById(id).value;
  });
  return values;
}

function clearForm() {
  document.getElementById('name').value = '';
  document.getElementById('rating').value = '0';
  document.querySelector('.rating-value').innerHTML = '0.0';
  document.getElementById('comments').value = '';
}

function handleAddReviewSubmit() {
  var allInputsValid = validateAllInputs();

  if (allInputsValid) {
    var _getFormInputValues = getFormInputValues(),
        name = _getFormInputValues.name,
        rating = _getFormInputValues.rating,
        comments = _getFormInputValues.comments;

    if (!navigator.serviceWorker) {
      // perform regular fetch and regular updates
      var submitButton = document.getElementById('add-review-submit');
      submitButton.setAttribute('disabled', true);
      submitButton.setAttribute('aria-busy', 'true');
      DBHelper.addReview(self.restaurant.id, name, rating, comments, function (error, newReview) {
        submitButton.removeAttribute('disabled');
        submitButton.setAttribute('aria-busy', 'false');

        if (error) {
          // TODO: toast error
          console.log(error);
        } else {
          // TODO: toast success
          var ul = document.getElementById('reviews-list');
          ul.appendChild(createReviewHTML(newReview));
          closeModal();
          clearForm();
        }
      });
    } else {
      var requestId = "".concat(self.restaurant.id, "-").concat(Date.now());
      var ul = document.getElementById('reviews-list');
      ul.appendChild(createReviewHTML({
        name: name,
        rating: rating,
        comments: comments
      }, true, requestId));
      closeModal();
      clearForm();
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZFJldmlld01vZGFsLmpzIl0sIm5hbWVzIjpbIm9wZW5Nb2RhbCIsInByZXZpb3VzbHlGb2N1c2VkRWxlbWVudCIsImRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIm92ZXJsYXkiLCJxdWVyeVNlbGVjdG9yIiwiaW50ZXJhY3RpdmVFbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjbGFzc0xpc3QiLCJhZGQiLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsInRyYXBUYWJLZXkiLCJzZXRUaW1lb3V0IiwiZm9jdXMiLCJjbG9zZU1vZGFsIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiVEFCIiwiZmlyc3RFbGVtZW50IiwibGFzdEVsZW1lbnQiLCJsZW5ndGgiLCJrZXlDb2RlIiwic2hpZnRLZXkiLCJ0YXJnZXQiLCJwcmV2ZW50RGVmYXVsdCIsInNldE5hbWVJbnB1dEVycm9yIiwibmFtZUlucHV0IiwiZ2V0RWxlbWVudEJ5SWQiLCJuYW1lSW5wdXRFcnJvciIsInNldEF0dHJpYnV0ZSIsImNsZWFyTmFtZUlucHV0RXJyb3IiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRSYXRpbmdJbnB1dEVycm9yIiwicmF0aW5nSW5wdXQiLCJyYXRpbmdJbnB1dEVycm9yIiwiY2xlYXJSYXRpbmdJbnB1dEVycm9yIiwic2V0Q29tbWVudElucHV0RXJyb3IiLCJjb21tZW50SW5wdXQiLCJjb21tZW50SW5wdXRFcnJvciIsImNsZWFyQ29tbWVudElucHV0RXJyb3IiLCJlcnJvckZ1bmN0aW9ucyIsIm5hbWUiLCJzZXRFcnJvciIsImNsZWFyRXJyb3IiLCJyYXRpbmciLCJjb21tZW50cyIsInZhbGlkYXRlSW5wdXQiLCJpZCIsImlucHV0IiwiY2xvbmVOb2RlIiwidmFsdWUiLCJOdW1iZXIiLCJwYXJzZUludCIsInZhbGlkYXRlQWxsSW5wdXRzIiwiYWxsSW5wdXRzVmFsaWQiLCJpbnB1dElkcyIsImZvckVhY2giLCJpbnB1dFZhbGlkIiwiaGFuZGxlUmFuZ2VDaGFuZ2UiLCJyYXRpbmdWYWx1ZSIsImlubmVySFRNTCIsImhhbmRsZU5hbWVJbnB1dEJsdXIiLCJoYW5kbGVSYXRpbmdJbnB1dEJsdXIiLCJoYW5kbGVDb21tZW50SW5wdXRCbHVyIiwiZ2V0Rm9ybUlucHV0VmFsdWVzIiwidmFsdWVzIiwiY2xlYXJGb3JtIiwiaGFuZGxlQWRkUmV2aWV3U3VibWl0IiwibmF2aWdhdG9yIiwic2VydmljZVdvcmtlciIsInN1Ym1pdEJ1dHRvbiIsIkRCSGVscGVyIiwiYWRkUmV2aWV3Iiwic2VsZiIsInJlc3RhdXJhbnQiLCJlcnJvciIsIm5ld1JldmlldyIsImNvbnNvbGUiLCJsb2ciLCJ1bCIsImFwcGVuZENoaWxkIiwiY3JlYXRlUmV2aWV3SFRNTCIsInJlcXVlc3RJZCIsIkRhdGUiLCJub3ciXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFFQSxTQUFTQSxTQUFULEdBQXFCO0FBQ25CQyxFQUFBQSx3QkFBd0IsR0FBR0MsUUFBUSxDQUFDQyxhQUFwQztBQUNBLE1BQU1DLE9BQU8sR0FBR0YsUUFBUSxDQUFDRyxhQUFULENBQXVCLFVBQXZCLENBQWhCO0FBQ0EsTUFBTUMsbUJBQW1CLEdBQUdGLE9BQU8sQ0FBQ0csZ0JBQVIsQ0FBeUIseUJBQXpCLENBQTVCO0FBQ0FILEVBQUFBLE9BQU8sQ0FBQ0ksU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IsTUFBdEI7QUFDQVAsRUFBQUEsUUFBUSxDQUFDUSxJQUFULENBQWNGLFNBQWQsQ0FBd0JDLEdBQXhCLENBQTRCLGdCQUE1QjtBQUNBUCxFQUFBQSxRQUFRLENBQUNTLGdCQUFULENBQTBCLFNBQTFCLEVBQXFDQyxVQUFyQztBQUNBQyxFQUFBQSxVQUFVLENBQUMsWUFBVTtBQUFFUCxJQUFBQSxtQkFBbUIsQ0FBQyxDQUFELENBQW5CLENBQXVCUSxLQUF2QjtBQUFpQyxHQUE5QyxFQUFnRCxHQUFoRCxDQUFWO0FBQ0Q7O0FBRUQsU0FBU0MsVUFBVCxHQUFzQjtBQUNwQmIsRUFBQUEsUUFBUSxDQUFDRyxhQUFU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Q0csTUFBN0MsRUFBcURDLFFBQXJELEVBQStELFVBQUM4QixLQUFELEVBQVFDLFNBQVIsRUFBc0I7QUFDbkZOLFFBQUFBLFlBQVksQ0FBQ3ZDLGVBQWIsQ0FBNkIsVUFBN0I7QUFDQXVDLFFBQUFBLFlBQVksQ0FBQ3pDLFlBQWIsQ0FBMEIsV0FBMUIsRUFBdUMsT0FBdkM7O0FBQ0EsWUFBSThDLEtBQUosRUFBVztBQUNUO0FBQ0FFLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxLQUFaO0FBQ0QsU0FIRCxNQUdPO0FBQ0w7QUFDQSxjQUFNSSxFQUFFLEdBQUcvRSxRQUFRLENBQUMyQixjQUFULENBQXdCLGNBQXhCLENBQVg7QUFDQW9ELFVBQUFBLEVBQUUsQ0FBQ0MsV0FBSCxDQUFlQyxnQkFBZ0IsQ0FBQ0wsU0FBRCxDQUEvQjtBQUNBL0QsVUFBQUEsVUFBVTtBQUNWcUQsVUFBQUEsU0FBUztBQUNWO0FBQ0YsT0FiRDtBQWNELEtBbEJELE1Ba0JPO0FBQ0wsVUFBTWdCLFNBQVMsYUFBTVQsSUFBSSxDQUFDQyxVQUFMLENBQWdCM0IsRUFBdEIsY0FBNEJvQyxJQUFJLENBQUNDLEdBQUwsRUFBNUIsQ0FBZjtBQUNBLFVBQU1MLEVBQUUsR0FBRy9FLFFBQVEsQ0FBQzJCLGNBQVQsQ0FBd0IsY0FBeEIsQ0FBWDtBQUNBb0QsTUFBQUEsRUFBRSxDQUFDQyxXQUFILENBQWVDLGdCQUFnQixDQUFDO0FBQUV4QyxRQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUUcsUUFBQUEsTUFBTSxFQUFOQSxNQUFSO0FBQWdCQyxRQUFBQSxRQUFRLEVBQVJBO0FBQWhCLE9BQUQsRUFBNkIsSUFBN0IsRUFBbUNxQyxTQUFuQyxDQUEvQjtBQUNBckUsTUFBQUEsVUFBVTtBQUNWcUQsTUFBQUEsU0FBUztBQUNWO0FBQ0Y7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiogbW9kYWwgKioqKioqKi9cblxuZnVuY3Rpb24gb3Blbk1vZGFsKCkge1xuICBwcmV2aW91c2x5Rm9jdXNlZEVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICBjb25zdCBvdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm92ZXJsYXknKTtcbiAgY29uc3QgaW50ZXJhY3RpdmVFbGVtZW50cyA9IG92ZXJsYXkucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uLCBpbnB1dCwgdGV4dGFyZWEnKTtcbiAgb3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7XG4gIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnaGFzLW9wZW4tbW9kYWwnKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRyYXBUYWJLZXkpO1xuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IGludGVyYWN0aXZlRWxlbWVudHNbMF0uZm9jdXMoKTsgfSwgMTAwKTtcbn1cblxuZnVuY3Rpb24gY2xvc2VNb2RhbCgpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm92ZXJsYXknKS5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XG4gIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnaGFzLW9wZW4tbW9kYWwnKTtcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRyYXBUYWJLZXkpO1xuICBpZiAocHJldmlvdXNseUZvY3VzZWRFbGVtZW50KSB7XG4gICAgcHJldmlvdXNseUZvY3VzZWRFbGVtZW50LmZvY3VzKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdHJhcFRhYktleShldmVudCkge1xuICBjb25zdCBvdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm92ZXJsYXknKTtcbiAgY29uc3QgaW50ZXJhY3RpdmVFbGVtZW50cyA9IG92ZXJsYXkucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uLCBpbnB1dCcpO1xuICBjb25zdCBUQUIgPSA5O1xuICBjb25zdCBmaXJzdEVsZW1lbnQgPSBpbnRlcmFjdGl2ZUVsZW1lbnRzWzBdO1xuICBjb25zdCBsYXN0RWxlbWVudCA9IGludGVyYWN0aXZlRWxlbWVudHNbaW50ZXJhY3RpdmVFbGVtZW50cy5sZW5ndGggLSAxXTtcbiAgaWYgKGV2ZW50LmtleUNvZGUgPT09IFRBQikge1xuICAgIGlmIChldmVudC5zaGlmdEtleSAmJiBldmVudC50YXJnZXQgPT09IGZpcnN0RWxlbWVudCkgeyAvLyBzaGlmdCArIHRhYlxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGxhc3RFbGVtZW50LmZvY3VzKCk7XG4gICAgfSBlbHNlIGlmICghZXZlbnQuc2hpZnRLZXkgJiYgZXZlbnQudGFyZ2V0ID09PSBsYXN0RWxlbWVudCkgeyAvLyB0YWJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBmaXJzdEVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqKioqKiBoYW5kbGUgZXJyb3JzICoqKioqKiovXG5cbmZ1bmN0aW9uIHNldE5hbWVJbnB1dEVycm9yKCkge1xuICBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmFtZScpO1xuICBjb25zdCBuYW1lSW5wdXRFcnJvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYW1lLWVycm9yJyk7XG4gIG5hbWVJbnB1dC5jbGFzc0xpc3QuYWRkKCdoYXMtZXJyb3InKTtcbiAgbmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnYXJpYS1pbnZhbGlkJywgJ3RydWUnKTtcbiAgbmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScsICduYW1lLWVycm9yJyk7XG4gIG5hbWVJbnB1dEVycm9yLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJOYW1lSW5wdXRFcnJvcigpIHtcbiAgY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hbWUnKTtcbiAgY29uc3QgbmFtZUlucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmFtZS1lcnJvcicpO1xuICBuYW1lSW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgnaGFzLWVycm9yJyk7XG4gIG5hbWVJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcpO1xuICBuYW1lSW5wdXQucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5Jyk7XG4gIG5hbWVJbnB1dEVycm9yLmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTtcbn1cblxuZnVuY3Rpb24gc2V0UmF0aW5nSW5wdXRFcnJvcigpIHtcbiAgY29uc3QgcmF0aW5nSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nJyk7XG4gIGNvbnN0IHJhdGluZ0lucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nLWVycm9yJyk7XG4gIHJhdGluZ0lucHV0LmNsYXNzTGlzdC5hZGQoJ2hhcy1lcnJvcicpO1xuICByYXRpbmdJbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcsICd0cnVlJyk7XG4gIHJhdGluZ0lucHV0LnNldEF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScsICdyYXRpbmctZXJyb3InKTtcbiAgcmF0aW5nSW5wdXRFcnJvci5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyUmF0aW5nSW5wdXRFcnJvcigpIHtcbiAgY29uc3QgcmF0aW5nSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nJyk7XG4gIGNvbnN0IHJhdGluZ0lucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nLWVycm9yJyk7XG4gIHJhdGluZ0lucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ2hhcy1lcnJvcicpO1xuICByYXRpbmdJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcpO1xuICByYXRpbmdJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknKTtcbiAgcmF0aW5nSW5wdXRFcnJvci5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XG59XG5cbmZ1bmN0aW9uIHNldENvbW1lbnRJbnB1dEVycm9yKCkge1xuICBjb25zdCBjb21tZW50SW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29tbWVudHMnKTtcbiAgY29uc3QgY29tbWVudElucHV0RXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29tbWVudHMtZXJyb3InKTtcbiAgY29tbWVudElucHV0LmNsYXNzTGlzdC5hZGQoJ2hhcy1lcnJvcicpO1xuICBjb21tZW50SW5wdXQuc2V0QXR0cmlidXRlKCdhcmlhLWludmFsaWQnLCAndHJ1ZScpO1xuICBjb21tZW50SW5wdXQuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5JywgJ2NvbW1lbnRzLWVycm9yJyk7XG4gIGNvbW1lbnRJbnB1dEVycm9yLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJDb21tZW50SW5wdXRFcnJvcigpIHtcbiAgY29uc3QgY29tbWVudElucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbW1lbnRzJyk7XG4gIGNvbnN0IGNvbW1lbnRJbnB1dEVycm9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbW1lbnRzLWVycm9yJyk7XG4gIGNvbW1lbnRJbnB1dC5jbGFzc0xpc3QucmVtb3ZlKCdoYXMtZXJyb3InKTtcbiAgY29tbWVudElucHV0LnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1pbnZhbGlkJyk7XG4gIGNvbW1lbnRJbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknKTtcbiAgY29tbWVudElucHV0RXJyb3IuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xufVxuXG5jb25zdCBlcnJvckZ1bmN0aW9ucyA9IHtcbiAgbmFtZToge1xuICAgIHNldEVycm9yOiBzZXROYW1lSW5wdXRFcnJvcixcbiAgICBjbGVhckVycm9yOiBjbGVhck5hbWVJbnB1dEVycm9yLFxuICB9LFxuICByYXRpbmc6IHtcbiAgICBzZXRFcnJvcjogc2V0UmF0aW5nSW5wdXRFcnJvcixcbiAgICBjbGVhckVycm9yOiBjbGVhclJhdGluZ0lucHV0RXJyb3IsXG4gIH0sXG4gIGNvbW1lbnRzOiB7XG4gICAgc2V0RXJyb3I6IHNldENvbW1lbnRJbnB1dEVycm9yLFxuICAgIGNsZWFyRXJyb3I6IGNsZWFyQ29tbWVudElucHV0RXJyb3IsXG4gIH1cbn07XG5cbi8qKioqKiogdmFsaWRhdGlvbiAqKioqKioqL1xuXG5mdW5jdGlvbiB2YWxpZGF0ZUlucHV0KGlkKSB7XG4gIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLmNsb25lTm9kZSgpO1xuICBjb25zdCB2YWx1ZSA9IGlkID09PSAncmF0aW5nJz8gTnVtYmVyLnBhcnNlSW50KGlucHV0LnZhbHVlLCAxMCkgOiBpbnB1dC52YWx1ZTtcbiAgaWYgKHZhbHVlKSB7XG4gICAgZXJyb3JGdW5jdGlvbnNbaWRdLmNsZWFyRXJyb3IoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBlcnJvckZ1bmN0aW9uc1tpZF0uc2V0RXJyb3IoKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVBbGxJbnB1dHMoKSB7XG4gIGxldCBhbGxJbnB1dHNWYWxpZCA9IHRydWU7XG4gIGNvbnN0IGlucHV0SWRzID0gWyduYW1lJywgJ3JhdGluZycsICdjb21tZW50cyddO1xuICBpbnB1dElkcy5mb3JFYWNoKChpZCkgPT4ge1xuICAgIGNvbnN0IGlucHV0VmFsaWQgPSB2YWxpZGF0ZUlucHV0KGlkKTtcbiAgICBhbGxJbnB1dHNWYWxpZCA9IGFsbElucHV0c1ZhbGlkICYmIGlucHV0VmFsaWQ7XG4gIH0pO1xuICByZXR1cm4gYWxsSW5wdXRzVmFsaWQ7XG59XG5cbi8qKioqKiogaGFuZGxlIGV2ZW50cyAqKioqKioqL1xuXG5mdW5jdGlvbiBoYW5kbGVSYW5nZUNoYW5nZShldmVudCkge1xuICB2YXIgcmF0aW5nVmFsdWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmF0aW5nLXZhbHVlJyk7XG4gIHJhdGluZ1ZhbHVlLmlubmVySFRNTCA9IGAke2V2ZW50LnRhcmdldC52YWx1ZX0uMGA7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU5hbWVJbnB1dEJsdXIoKSB7XG4gIHZhbGlkYXRlSW5wdXQoJ25hbWUnKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlUmF0aW5nSW5wdXRCbHVyKCkge1xuICB2YWxpZGF0ZUlucHV0KCdyYXRpbmcnKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQ29tbWVudElucHV0Qmx1cigpIHtcbiAgdmFsaWRhdGVJbnB1dCgnY29tbWVudHMnKTtcbn1cblxuZnVuY3Rpb24gZ2V0Rm9ybUlucHV0VmFsdWVzKCkge1xuICBjb25zdCBpbnB1dElkcyA9IFsnbmFtZScsICdyYXRpbmcnLCAnY29tbWVudHMnXTtcbiAgY29uc3QgdmFsdWVzID0ge307XG4gIGlucHV0SWRzLmZvckVhY2goKGlkKSA9PiB7XG4gICAgdmFsdWVzW2lkXSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS52YWx1ZTtcbiAgfSk7XG4gIHJldHVybiB2YWx1ZXM7XG59XG5cbmZ1bmN0aW9uIGNsZWFyRm9ybSgpIHtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hbWUnKS52YWx1ZSA9ICcnO1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nJykudmFsdWUgPSAnMCc7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yYXRpbmctdmFsdWUnKS5pbm5lckhUTUwgPSAnMC4wJztcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbW1lbnRzJykudmFsdWUgPSAnJztcbn1cblxuZnVuY3Rpb24gaGFuZGxlQWRkUmV2aWV3U3VibWl0KCkge1xuICBjb25zdCBhbGxJbnB1dHNWYWxpZCA9IHZhbGlkYXRlQWxsSW5wdXRzKCk7XG4gIGlmIChhbGxJbnB1dHNWYWxpZCkge1xuICAgIGNvbnN0IHsgbmFtZSwgcmF0aW5nLCBjb21tZW50cyB9ID0gZ2V0Rm9ybUlucHV0VmFsdWVzKCk7XG4gICAgaWYgKCFuYXZpZ2F0b3Iuc2VydmljZVdvcmtlcikgeyAvLyBwZXJmb3JtIHJlZ3VsYXIgZmV0Y2ggYW5kIHJlZ3VsYXIgdXBkYXRlc1xuICAgICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZC1yZXZpZXctc3VibWl0Jyk7XG4gICAgICBzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xuICAgICAgc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1idXN5JywgJ3RydWUnKTtcbiAgICAgIERCSGVscGVyLmFkZFJldmlldyhzZWxmLnJlc3RhdXJhbnQuaWQsIG5hbWUsIHJhdGluZywgY29tbWVudHMsIChlcnJvciwgbmV3UmV2aWV3KSA9PiB7XG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtYnVzeScsICdmYWxzZScpO1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAvLyBUT0RPOiB0b2FzdCBlcnJvclxuICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBUT0RPOiB0b2FzdCBzdWNjZXNzXG4gICAgICAgICAgY29uc3QgdWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV2aWV3cy1saXN0Jyk7XG4gICAgICAgICAgdWwuYXBwZW5kQ2hpbGQoY3JlYXRlUmV2aWV3SFRNTChuZXdSZXZpZXcpKTtcbiAgICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgICAgICAgY2xlYXJGb3JtKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCByZXF1ZXN0SWQgPSBgJHtzZWxmLnJlc3RhdXJhbnQuaWR9LSR7RGF0ZS5ub3coKX1gO1xuICAgICAgY29uc3QgdWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV2aWV3cy1saXN0Jyk7XG4gICAgICB1bC5hcHBlbmRDaGlsZChjcmVhdGVSZXZpZXdIVE1MKHsgbmFtZSwgcmF0aW5nLCBjb21tZW50cyB9LCB0cnVlLCByZXF1ZXN0SWQpKTtcbiAgICAgIGNsb3NlTW9kYWwoKTtcbiAgICAgIGNsZWFyRm9ybSgpO1xuICAgIH1cbiAgfVxufVxuIl0sImZpbGUiOiJhZGRSZXZpZXdNb2RhbC5qcyJ9
