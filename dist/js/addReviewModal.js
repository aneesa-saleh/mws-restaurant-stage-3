"use strict";

/****** modal *******/
function openModal() {
  previouslyFocusedElement = document.activeElement;
  var overlay = document.querySelector('.overlay');
  var interactiveElements = overlay.querySelectorAll('button, input, textarea');
  overlay.classList.add('show');
  document.body.classList.add('has-open-modal');
  document.addEventListener('keydown', trapTabKey);
  setTimeout(function () {
    interactiveElements[0].focus();
  }, 100);
}

function closeModal() {
  document.querySelector('.overlay').classList.remove('show');
  document.body.classList.remove('has-open-modal');
  document.removeEventListener('keydown', trapTabKey);

  if (previouslyFocusedElement) {
    previouslyFocusedElement.focus();
  }
}

function trapTabKey(event) {
  var overlay = document.querySelector('.overlay');
  var interactiveElements = overlay.querySelectorAll('button, input');
  var TAB = 9;
  var firstElement = interactiveElements[0];
  var lastElement = interactiveElements[interactiveElements.length - 1];

  if (event.keyCode === TAB) {
    if (event.shiftKey && event.target === firstElement) {
      // shift + tab
      event.preventDefault();
      lastElement.focus();
    } else if (!event.shiftKey && event.target === lastElement) {
      // tab
      event.preventDefault();
      firstElement.focus();
    }
  }
}
/****** handle errors *******/


function setNameInputError() {
  var nameInput = document.getElementById('name');
  var nameInputError = document.getElementById('name-error');
  nameInput.classList.add('has-error');
  nameInput.setAttribute('aria-invalid', 'true');
  nameInput.setAttribute('aria-describedby', 'name-error');
  nameInputError.classList.add('show');
}

function clearNameInputError() {
  var nameInput = document.getElementById('name');
  var nameInputError = document.getElementById('name-error');
  nameInput.classList.remove('has-error');
  nameInput.removeAttribute('aria-invalid');
  nameInput.removeAttribute('aria-describedby');
  nameInputError.classList.remove('show');
}

function setRatingInputError() {
  var ratingInput = document.getElementById('rating');
  var ratingInputError = document.getElementById('rating-error');
  ratingInput.classList.add('has-error');
  ratingInput.setAttribute('aria-invalid', 'true');
  ratingInput.setAttribute('aria-describedby', 'rating-error');
  ratingInputError.classList.add('show');
}

function clearRatingInputError() {
  var ratingInput = document.getElementById('rating');
  var ratingInputError = document.getElementById('rating-error');
  ratingInput.classList.remove('has-error');
  ratingInput.removeAttribute('aria-invalid');
  ratingInput.removeAttribute('aria-describedby');
  ratingInputError.classList.remove('show');
}

function setCommentInputError() {
  var commentInput = document.getElementById('comments');
  var commentInputError = document.getElementById('comments-error');
  commentInput.classList.add('has-error');
  commentInput.setAttribute('aria-invalid', 'true');
  commentInput.setAttribute('aria-describedby', 'comments-error');
  commentInputError.classList.add('show');
}

function clearCommentInputError() {
  var commentInput = document.getElementById('comments');
  var commentInputError = document.getElementById('comments-error');
  commentInput.classList.remove('has-error');
  commentInput.removeAttribute('aria-invalid');
  commentInput.removeAttribute('aria-describedby');
  commentInputError.classList.remove('show');
}

var errorFunctions = {
  name: {
    setError: setNameInputError,
    clearError: clearNameInputError
  },
  rating: {
    setError: setRatingInputError,
    clearError: clearRatingInputError
  },
  comments: {
    setError: setCommentInputError,
    clearError: clearCommentInputError
  }
};
/****** validation *******/

function validateInput(id) {
  var input = document.getElementById(id).cloneNode();
  var value = id === 'rating' ? Number.parseInt(input.value, 10) : input.value;

  if (value) {
    errorFunctions[id].clearError();
    return true;
  } else {
    errorFunctions[id].setError();
    return false;
  }
}

function validateAllInputs() {
  var allInputsValid = true;
  var inputIds = ['name', 'rating', 'comments'];
  inputIds.forEach(function (id) {
    var inputValid = validateInput(id);
    allInputsValid = allInputsValid && inputValid;
  });
  return allInputsValid;
}
/****** handle events *******/


function handleRangeChange(event) {
  var ratingValue = document.querySelector('.rating-value');
  ratingValue.innerHTML = "".concat(event.target.value, ".0");
}

function handleNameInputBlur() {
  validateInput('name');
}

function handleRatingInputBlur() {
  validateInput('rating');
}

function handleCommentInputBlur() {
  validateInput('comments');
}

function getFormInputValues() {
  var inputIds = ['name', 'rating', 'comments'];
  var values = {};
  inputIds.forEach(function (id) {
    values[id] = document.getElementById(id).value;
  });
  return values;
}

function clearForm() {
  document.getElementById('name').value = '';
  document.getElementById('rating').value = '0';
  document.querySelector('.rating-value').innerHTML = '0.0';
  document.getElementById('comments').value = '';
}

function handleAddReviewSubmit() {
  var allInputsValid = validateAllInputs();

  if (allInputsValid) {
    var _getFormInputValues = getFormInputValues(),
        name = _getFormInputValues.name,
        rating = _getFormInputValues.rating,
        comments = _getFormInputValues.comments;

    if (!navigator.serviceWorker || !navigator.serviceWorker.controller) {
      // perform regular fetch and regular updates
      var submitButton = document.getElementById('add-review-submit');
      submitButton.setAttribute('disabled', true);
      submitButton.setAttribute('aria-busy', 'true');
      DBHelper.addReview(self.restaurant.id, name, rating, comments, function (error, newReview) {
        submitButton.removeAttribute('disabled');
        submitButton.setAttribute('aria-busy', 'false');

        if (error) {
          // TODO: toast error
          console.log(error);
        } else {
          // TODO: toast success
          var ul = document.getElementById('reviews-list');
          ul.appendChild(createReviewHTML(newReview));
          closeModal();
          clearForm();
        }
      });
    } else {
      var requestId = "".concat(self.restaurant.id, "-").concat(Date.now());
      var newReview = {
        name: name,
        rating: rating,
        comments: comments,
        restaurant_id: self.restaurant.id
      };
      var ul = document.getElementById('reviews-list');
      ul.appendChild(createReviewHTML(newReview, true, requestId));
      closeModal();
      clearForm();
      navigator.serviceWorker.controller.postMessage({
        type: 'post-review',
        review: newReview,
        requestId: requestId
      });
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
